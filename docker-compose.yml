version: '3.7'

services:

  backend:
    # build: ./Backend
    build: 
      context: ./Backend
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: 3
    volumes:
      - .:/workspace:cached # Additional bind mount
    command: sleep infinity
    networks: 
      - backend_net
      - frontend_net
    environment: 
      FLASK_APP: app.py
      BACKEND_URL: 0.0.0.0
      FLASK_RUN_PORT: 5000
      FLASK_ENV: development
      DB_PORT: 5433
    ports: 
      - 5000:5000
 
  frontend:
    # build: ./Frontend
    build: 
      context: ./Frontend
      dockerfile: .devcontainer/Dockerfile
      args:
        # [Choice] Node version: 10, 12, 14
        VARIANT: 14
    volumes: 
      - .:/workspace:cached # Additional bind mount
    command: sleep infinity
    networks:
      - frontend_net
    environment: 
      ENV BACKEND_URL: backend
      ENV BACKEND_PORT: 5000
    ports: 
      - 80:80
  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 5433
    networks: 
      - backend_net

volumes:
  postgres-data:
  pgadmin-data:

networks:
  backend_net:
    driver: bridge
  frontend_net:
    driver: bridge